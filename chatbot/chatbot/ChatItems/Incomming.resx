<?xml version="1.0" encoding="utf-8"?>
<root>
  <!--
    Microsoft ResX Schema

    Version 2.0

    The primary goals of this format is to allow a simple XML format
    that is mostly human readable. The generation and parsing of the
    various data types are done through the TypeConverter classes
    associated with the data types.

    Example:

    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>

    There are any number of "resheader" rows that contain simple
    name/value pairs.

    Each data row contains a name, and value. The row also contains a
    type or mimetype. Type corresponds to a .NET class that support
    text/value conversion through the TypeConverter architecture.
    Classes that don't support this are serialized and stored with the
    mimetype set.

    The mimetype is used for serialized objects, and tells the
    ResXResourceReader how to depersist the object. This is currently not
    extensible. For a given mimetype the value must be set accordingly:

    Note - application/x-microsoft.net.object.binary.base64 is the format
    that the ResXResourceWriter will generate, however the reader can
    read any of the formats listed below.

    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="guna2CirclePictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>